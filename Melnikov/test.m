clc, clear all

t = 600;
x = [];
y = [];
myRand = [];
u = 0;
for i=1:t
    x(i) = cos(0.1*u);
    myRand(i) = randn();
    y(i) = x(i) + myRand(i);
    u = u + 1;
end
plot(x);
hold on;
plot(y);

% фильтруем


%уравнение фильтрации
%расчет M
x_2=[];
%расчет матрицы R
R = zeros(3,3);
G = 1;%max(myRand);%максмальное отклонение шума...хз как считать
%{
R = [
        1/2 * cos(0.5*(i-2))+G^2 , 1/2 * cos(0.5 *(i-1) ) , 1/2 * cos(0.5 *i);
        1/2 * cos(0.5*(i-1)) , 1/2 * cos(0.5*(i-2) )+G^2 , 1/2 * cos(0.5 *(i-1));
        1/2 * cos(0.5 *(i)) , 1/2 * cos(0.5 *(i-1) ) , 1/2 * cos(0.5*(i-2))+G^2;
    ];
%расчет r
r = zeros(3);
r = [
    1/2 * cos(0.5*(i-1));
    1/2 * cos(0.5*(i-2));
    1/2 * cos(0.5*(i-1));
];
%}
%{
R = [
        1/2 * cos(0)+G^2 , 1/2 * cos(0.5*1 ) , 1/2 * cos(0.5 *2), 1/2 * cos(0.5 *3), 1/2 * cos(0.5 *4);
        1/2 * cos(0.5*1) , 1/2 * cos(0.5*0 )+G^2 , 1/2 * cos(0.5*1), 1/2 * cos(0.5 *2), 1/2 * cos(0.5 *3);
        1/2 * cos(0.5 *2) , 1/2 * cos(0.5 *1 ) , 1/2 * cos(0.5*0)+G^2, 1/2 * cos(0.5 *1), 1/2 * cos(0.5 *2);
        1/2 * cos(0.5 *3) , 1/2 * cos(0.5*2  ) , 1/2 * cos(0.5*1), 1/2 * cos(0.5 *0)+G^2, 1/2 * cos(0.5 *1);
        1/2 * cos(0.5 *4) , 1/2 * cos(0.5 *3 ) , 1/2 * cos(0.5*2), 1/2 * cos(0.5 *1), 1/2 * cos(0.5 *0)+G^2;
    ];
%}
%расчет r
%{
r = zeros(3);
r = [
    1/2 * cos(0.5*2);
    1/2 * cos(0.5);
    1/2 * cos(0);
    1/2 * cos(0.5);
    1/2 * cos(0.5*2);
];
%}
len = 32;
R = genR(len,G);
r = genrm(len);
%нахождение коэффициентов a(1:3)
a = zeros(3);
a = inv(R)*r;
%фильтрация
for i=1+len/2 : t-len/2
x_2(i) = filtrRand(y,i,len,a);%a(1)*y(i-1) + a(2)*y(i) + a(3)*y(i+1);%неправильный результат
end
hold off
legend('y = cos(0.5x)','y = cos(0.5x) + randz()');
title('До фильтрации');
figure
plot(x);
hold on
plot(x_2);
legend('y = cos(0.5x)','Отфильтрованный сигнал');
title('После фильтрации');
